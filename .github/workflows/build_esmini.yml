name: Build esmini FMU

on:
  workflow_call:

jobs:
  build_esmini:
    name: Build esmini FMU
    runs-on: ubuntu-latest

    steps:
      - name: Cache esmini FMU
        id: cache-esmini
        uses: actions/cache@v3
        with:
          path: /tmp/esmini_fmu
          key: ${{ runner.os }}-esmini

      - name: Get esmini
        if: steps.cache-esmini.outputs.cache-hit != 'true'
        run: git clone https://github.com/esmini/esmini.git

      - name: Checkout dev Branch
        if: steps.cache-esmini.outputs.cache-hit != 'true'
        working-directory: esmini
        run: git checkout dev

      - name: Update Submodules
        if: steps.cache-esmini.outputs.cache-hit != 'true'
        working-directory: esmini
        run: git submodule update --init

      - name: Build esmini
        if: steps.cache-esmini.outputs.cache-hit != 'true'
        working-directory: esmini
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release --target install

      - name: Build esmini FMU
        if: steps.cache-esmini.outputs.cache-hit != 'true'
        working-directory: esmini/OSMP_FMU
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

      - name: Create esmini FMU Directory
        run: mkdir /tmp/esmini_fmu

      - name: Copy esmini FMU
        working-directory: esmini/OSMP_FMU/build
        run: cp EsminiOsiSource.fmu /tmp/esmini_fmu/EsminiOsiSource.fmu
